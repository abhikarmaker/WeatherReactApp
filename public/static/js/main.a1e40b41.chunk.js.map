{"version":3,"sources":["api/weather.component.jsx","api/form.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["weatherIconImage","desc","weatherIcon","className","src","alt","toUpperCase","Weather","props","city","country","temp_celcius","description","min","max","minmaxTemp","temp_min","temp_max","Form","onSubmit","loadweather","type","placeholder","name","autoComplete","error","role","App","getWeather","e","a","preventDefault","target","elements","value","setState","fetch","api_call","json","response","console","log","sys","celsius","calCelsius","main","temp","weather","icon","state","undefined","Math","floor","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1e40b41.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./weather.style.css\";\r\nconst Weather = (props) => {\r\n  return (\r\n    <div className=\"container text-light\">\r\n      <div className=\"Card\">\r\n        <h2 className=\"city-name\">\r\n          <span>{props.city}</span>\r\n          <span>{props.country}</span>\r\n        </h2>\r\n        {props.temp_celcius ? (\r\n          <div className=\"city-temp\">{props.temp_celcius}&deg;C</div>\r\n        ) : null}\r\n        <div className=\"info\">{weatherIconImage(props.description, props.weatherIcon)}</div>\r\n        <div className=\"info\">{minmaxTemp(props.temp_min, props.temp_max)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  function minmaxTemp(min, max) {\r\n    if (min && max) {\r\n      return (\r\n        <h3>\r\n          <span className=\"px-4\">{min}&deg;C</span>/\r\n          <span className=\"px-4\">{max}&deg;C</span>\r\n        </h3>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nfunction weatherIconImage (desc,weatherIcon){\r\n    if(desc){\r\n    return(\r\n        <div className=\"info\">\r\n          <img\r\n            className=\"city-icon\"\r\n            src={`https://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\r\n            alt={desc}\r\n          />\r\n          <p>{desc.toUpperCase()}</p>\r\n        </div>\r\n    )\r\n    };\r\n}\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\nimport \"./form.style.css\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.loadweather}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 offset-md-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"City!\"\r\n              name=\"city\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Country!\"\r\n              name=\"country\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <div>{props.error ? error() : null}</div>\r\n          </div>\r\n          <div className=\"col-md-3 mt-md-0 text-md-left\">\r\n            <button className=\"btn btn-Warning\">Get Weather</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction error() {\r\n  return <div role=\"alert\">Please enter the city and country</div>;\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport Weather from \"./api/weather.component\";\nimport Form from \"./api/form.component\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst API_Key = \"59e3e847b30fd1ed364760d87a050922\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      weatherIcon: undefined,\n      error: false,\n    };\n    //this.getWeather();\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    if (city === \"\" || country === \"\" || city === null || country === null ) {\n      this.setState({ error: true });\n    } else {\n\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country},&appid=${API_Key}`\n      );\n      const response = await api_call.json();\n      console.log(response);\n\n      this.setState({\n        city: `${response.name},${response.sys.country}`,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        icon: response.weather[0].icon,\n        error: false,\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n        <Form loadweather={this.getWeather} error={this.state.error} />\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          temp_celcius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n          weatherIcon={this.state.icon}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}